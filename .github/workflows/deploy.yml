name: Deploy backend to EC2 with ngrok

on:
  pull_request:
    branches:
      - prod
    paths:
      - 'back/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 22
      uses: actions/setup-java@v3
      with:
        java-version: '22'
        distribution: 'temurin'

    - name: Build Spring Boot App
      working-directory: back
      run: mvn clean package -DskipTests

    - name: Copy jar to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "back/target/demo-0.0.1-SNAPSHOT.jar"
        target: "/home/ec2-user"

    - name: SSH into EC2 to deploy and start app with ngrok
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "🔁 Matando processos antigos..."
          pkill -f 'java -jar' || true
          pkill -f './ngrok' || true

          echo "📦 Exportando variáveis de ambiente..."
          echo "export DB_URL=jdbc:mysql://database-1.cje38cbizrgc.us-east-1.rds.amazonaws.com:3306/fluxy_db" >> /etc/profile
          echo "export DB_USER=admin" >> /etc/profile
          echo "export DB_PASSWORD=root140600" >> /etc/profile
          export DB_URL=jdbc:mysql://database-1.cje38cbizrgc.us-east-1.rds.amazonaws.com:3306/fluxy_db
          export DB_USER=admin
          export DB_PASSWORD=root140600

          echo "📁 Indo para /home/ec2-user"
          cd /home/ec2-user

          echo "⬇️ Baixando ngrok..."
          wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
          tar -xzf ngrok-v3-stable-linux-amd64.tgz
          chmod +x ngrok

          echo "🔧 Instalando jq..."
          sudo yum install -y jq

          echo "🔐 Configurando token ngrok..."
          ./ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

          echo "🚀 Iniciando aplicação..."
          nohup java -jar demo-0.0.1-SNAPSHOT.jar > app.log 2>&1 &

          echo "🌐 Iniciando túnel ngrok..."
          nohup ./ngrok http 8080 --log=stdout > ngrok.log 2>&1 &

          echo "⏳ Aguardando ngrok..."
          sleep 10

          echo "🔗 Capturando URL do ngrok..."
          curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' > /home/ec2-user/ngrok_url.txt

          echo "✅ Deploy finalizado. URL do ngrok salva em /home/ec2-user/ngrok_url.txt"
